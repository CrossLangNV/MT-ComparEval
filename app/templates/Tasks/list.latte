{block scripts}
{include #parent}
<script type="text/javascript" src="{$baseUri}/js/directives.js"></script>
<script type="text/javascript" src="{$baseUri}/js/ngrams.js"></script>
<script type="text/javascript" src="{$baseUri}/js/bootstrap.min.js"></script>
<script type="text/javascript" src="{$baseUri}/js/highcharts.src.js"></script>
<script type="text/javascript">
$(document).ready( function() {
	$('#compare').click( function( event ) {
		event.preventDefault();
		var tasksIds = $(this).closest('form')
			.find( "input:checkbox:checked" )
			.toArray()
			.map( function( element ) { return $(element).attr( 'data-task-id' ); } );

		if( tasksIds.length != 2 ) {
			return alert( "You can compare only 2 tasks." );
		}

		window.location = "{!$baseUri}/tasks/" + tasksIds[0] + "-" + tasksIds[1] + "/compare";
	} );
} );
</script>

<script type="text/javascript">
	function Tasks( $scope, $http ) {

		$scope.hiddenTasks = 0;
		$scope.chartType = 'line';
		$scope.order = 'id';
		$scope.ascending = false;

		$scope.changeOrder = function( order ) {
			if( $scope.order == order ) {
				$scope.ascending = !$scope.ascending;
			} else {
				$scope.order = order;
				$scope.ascending = false;
			}
		}

		$scope.getOrderByValue = function( task ) {
			return task[ $scope.order ];
		}

		$scope.hideTask = function( task ) {
			task[ 'show' ] = false;
			$scope.hiddenTasks++;
		}

		loadTasks();

		function loadTasks() {
			var payload = {};
			payload.params = {
				"experimentId": {!$experimentId}
			};

			$http.get( '{!$baseUri}/api/tasks', payload ).success( function( data ) {
				$scope.tasks = data.tasks;
				$scope.showAdministration = data.show_administration;
			} );

			$http.get( '{!$baseUri}/api/metrics/scores-in-experiment', payload ).success( function( data ) {
				$scope.$watch( function() { return $scope.hiddenTasks; }, function( value ) {
					console.log( "WATCH FIRED" );

					data = [];
					for( key in $scope.metrics ) {
						data[ key ] = { 'name': $scope.metrics[ key ][ 'name' ], 'data': [] };
					}

					categories = [];
					for( key in $scope.tasks ) {
						if( !$scope.tasks[ key ][ 'show' ] ) {
							continue;
						}

						categories.push( $scope.tasks[ key ][ 'name' ] );

						for( metricKey in $scope.metrics ) {
							data[ metricKey ][ 'data' ].push( $scope.tasks[ key ][ $scope.metrics[ metricKey ][ 'name' ] ] );
						}
					}

					loadScores( categories, data );
				} );

				$scope.metrics = data.metrics;
				$scope.metrics.forEach( function( metric ) {
					for( taskId in metric[ 'data' ] ) {
						$scope.tasks[ taskId ][ metric[ 'name' ] ] = metric[ 'data' ][ taskId ];
					}
				} );

				$scope.tasks = array_values( $scope.tasks );
				$scope.tasks.forEach( function( task ) {
					task[ 'show' ] = true;
				} );
			} );
		}

		function loadScores( categories, data ) {
			$scope.scores = {
				"chart": {
					"zoomType": "x",
				},
				"colors": [
					"#468847",
					"#b94a48",
					"#c09853",
					"#3a87ad"
				],
				"title": {
					"text": "Tasks metric scores progress",
				},
				"yAxis": {
					"title": {
						"text": "score",
					}
				},
				"xAxis": {
					"showFirstLabel": true,
					"showLastLabel": true,
					"categories": categories,
					"title": {
						"text": "tasks"
					}
				},
				"legend": {
					"enabled": true,
					"borderWidth": 0,
				},
				"tooltip": {
					"enabled": true,
					"shared": true,
					"crosshairs": true
				},
				"credits": {
					"enabled": false
				},
				"plotOptions": {
					"series": {
						"marker": {
							"enabled": false,
						},
						"enableMouseTracking": true,
					},
				},
				"series": data
			};
		}

		function array_values( object ) {
			array = [];
			for( key in object ) {
				array.push( object[ key ] );
			}

			return array;
		}
	}
</script>
{/block}

{block #content}
<h1>{$experiment["name"]}</h1>

<p>{$experiment["description"]}</p>

<div ng-app="MT-ComparEval" ng-controller="Tasks">
	<div ng-if="tasks.length > 0">
		<div ng-if="tasks.length > 1">
			<div class="btn-group pull-right">
				<a ng-click="chartType = 'line'" class="btn btn-small" ng-class="{ 'btn-success': chartType == 'line' }">Line</a>
				<a ng-click="chartType = 'column'" class="btn btn-small" ng-class="{ 'btn-success': chartType == 'column' }">Column</a>
			</div>

			<div style="clear: both">
				<chart value="{{ scores }}" type="{{ chartType }}"> 1"></chart>
			</div>
		<div>


		<form>
			<table class="table table-bordered">
				<tr>
					<th class="span2">
						<a ng-click="changeOrder( 'name' )">name</a>
						<span class="icon" ng-class="{ 'icon-arrow-up': !ascending, 'icon-arrow-down': ascending}" ng-show="order == 'name'"></span>
					</th>
					<th class="span3">description</th>
					<th ng-repeat="metric in metrics" class="span2" style="text-align:center">
						<a ng-click="changeOrder( metric[ 'name' ] )">{{ metric[ 'name' ] }}</a>
						<span class="icon" ng-class="{ 'icon-arrow-up': !ascending, 'icon-arrow-down': ascending}" ng-show="order == metric[ 'name' ]"></span>
					</th>
					<th class="span2"></th>
				</tr>
				<tr ng-repeat="task in tasks | filter:{ show: true } | orderBy:getOrderByValue:ascending">
					<th class="name span2"><input type="checkbox" data-task-id="{{ task[ 'id' ] }}"/>{{ task[ 'name' ] }}</th>
					<td class="description">
						<span collapse-long collapse-long-text="{{ task[ 'description' ] }}" max-length=20>
							{{ task[ 'description' ] }}
						</span>
					</td>
					<td ng-repeat="metric in metrics" class="span2" style="text-align:center">{{ task[ metric[ 'name' ] ] }}</td>
					<td>
						<div class="text-right">
							<a ng-click="hideTask( task )">hide</a>
							<a href="{{ task[ 'edit_link' ] }}" ng-show="showAdministration">edit</a>
							<a href="{{ task[ 'delete_link' ] }}" ng-show="showAdministration" onclick="return confirm('do you really want to delete this? there is no way to undo this action')">delete</a>
						</div>
					</td>
				</tr>
			</table>

			<input type="submit" value="compare" class="button" id="compare" ng-if="tasks.length > 1" />

			<div class="alert" ng-show="tasks.length <= 1">
				You need to import at least 2 tasks to be able to compare them.
			</div>
		</form>
	</div>

	<div class="alert" ng-show="tasks.length == 0">
		There are no tasks in this experiment.
	</div>
</div>

